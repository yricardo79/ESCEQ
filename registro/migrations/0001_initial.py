# Generated by Django 3.0.7 on 2020-10-14 23:53

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comportamiento',
            fields=[
                ('id_comp', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='Identificador de comportamiento')),
                ('nombre_com', models.CharField(max_length=255, verbose_name='Nombre comportamiento')),
                ('descripcion_com', models.CharField(max_length=255, verbose_name='Descripción comportamiento')),
            ],
            options={
                'verbose_name': 'Comportamiento',
                'verbose_name_plural': 'Comportamientos',
                'db_table': 'comportamiento',
                'ordering': ['-id_comp'],
            },
        ),
        migrations.CreateModel(
            name='Comps_Nutricional',
            fields=[
                ('id_comp', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='Identificador compuesto nutricional')),
                ('comp_nutricional', models.CharField(max_length=255, verbose_name='Comps nutricionales')),
                ('tipo_componente', models.CharField(max_length=255, verbose_name='Tipo componente')),
                ('observaciones', models.CharField(max_length=255, verbose_name='Observaciones')),
            ],
            options={
                'verbose_name': 'Comps_Nutricional',
                'verbose_name_plural': 'Comps_Nutricionales',
                'db_table': 'comps_nutricional',
                'ordering': ['-id_comp'],
            },
        ),
        migrations.CreateModel(
            name='Disciplina_Deportiva',
            fields=[
                ('id_dis_dep', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='Identificador disciplina deportiva')),
                ('nombre_dis_dep', models.CharField(max_length=255, verbose_name='Nombre disciplina')),
                ('descripcion_dis_dep', models.CharField(max_length=255, verbose_name='Descripción disciplina')),
            ],
            options={
                'verbose_name': 'Disciplina_Deportiva',
                'verbose_name_plural': 'Disciplina_Deportivas',
                'db_table': 'disciplina_deportiva',
                'ordering': ['-id_dis_dep'],
            },
        ),
        migrations.CreateModel(
            name='Equ_Disc',
            fields=[
                ('chip_equ_disc', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='Id Equino disciplina')),
                ('exigencia', models.CharField(max_length=255, verbose_name='Exigencia')),
                ('disciplina_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Disciplina_Deportiva')),
            ],
            options={
                'verbose_name': 'Equ_Disc',
                'verbose_name_plural': 'Equ_Discs',
                'db_table': 'equ_disc',
                'ordering': ['-chip_equ_disc'],
            },
        ),
        migrations.CreateModel(
            name='Equino',
            fields=[
                ('chip', models.IntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Chip del equino')),
                ('nom_equino', models.CharField(max_length=255, verbose_name='Nombre del equino')),
                ('fec_nacimiento', models.DateField(verbose_name='Fecha de nacimiento')),
                ('adv_manejo', models.TextField(verbose_name='adv_manejo')),
                ('color', models.CharField(max_length=255, verbose_name='Color')),
                ('comportamiento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Comportamiento')),
                ('disciplia', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Equ_Disc')),
            ],
            options={
                'verbose_name': 'Equino',
                'verbose_name_plural': 'Equinos',
                'ordering': ['-chip'],
            },
        ),
        migrations.CreateModel(
            name='Raza',
            fields=[
                ('id_raza', models.AutoField(primary_key=True, serialize=False, verbose_name='Identificador Raza')),
                ('nom_raza', models.CharField(max_length=255, verbose_name='Nombre raza')),
                ('des_raza', models.CharField(max_length=255, verbose_name='Descripción')),
            ],
            options={
                'verbose_name': 'Raza',
                'verbose_name_plural': 'Razas',
                'db_table': 'raza',
                'ordering': ['-id_raza'],
            },
        ),
        migrations.CreateModel(
            name='Valores_Selects_Vario',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sexo_equino', models.CharField(max_length=255, verbose_name='Sexo')),
            ],
            options={
                'verbose_name': 'Valores_Selects_Vario',
                'verbose_name_plural': 'Valores_Selects_Varios',
                'db_table': 'Valores_Selects_Vario',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Veterinario',
            fields=[
                ('cedula', models.IntegerField(primary_key=True, serialize=False, unique=True, verbose_name='Cedula')),
                ('nombres_veterinario', models.CharField(max_length=255, verbose_name='Nombres')),
                ('apellidos_veterinario', models.CharField(max_length=255, verbose_name='Apellidos')),
                ('fecha_nac_veterinario', models.DateField(verbose_name='Fecha de nacimiento')),
                ('correo_veterinario', models.EmailField(max_length=254, verbose_name='Correo veterinario')),
                ('foto_vet', models.ImageField(null=True, upload_to='veterinarios')),
            ],
            options={
                'verbose_name': 'Veterinario',
                'verbose_name_plural': 'Veterinarios',
                'db_table': 'veterinario',
                'ordering': ['-cedula'],
            },
        ),
        migrations.CreateModel(
            name='Variables',
            fields=[
                ('id_var', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_registro', models.DateField(auto_now=True)),
                ('claudicacion', models.IntegerField(choices=[('1', 'Si'), ('0', 'No')], verbose_name='Hay claudicacion')),
                ('grado_claudi', models.IntegerField(verbose_name='Grado de claudicacion')),
                ('presencia_sangre', models.IntegerField(choices=[('1', 'Si'), ('0', 'No')], verbose_name='Presencia en sangre')),
                ('olleres', models.IntegerField(choices=[('1', 'Si'), ('0', 'No')], verbose_name='Olleres')),
                ('boca', models.IntegerField(choices=[('1', 'Si'), ('0', 'No')], verbose_name='Boca')),
                ('heridas_sangrantes', models.IntegerField(choices=[('1', 'Si'), ('0', 'No')], verbose_name='Heridas sangrantes')),
                ('evidencia_fat_sud', models.IntegerField(choices=[('1', 'Si'), ('0', 'No')], verbose_name='Evidencia fatiga o sudacion')),
                ('grano', models.IntegerField(verbose_name='Grano kilogramos')),
                ('forraje', models.IntegerField(verbose_name='Forraje kilogramos')),
                ('suplemento', models.IntegerField(choices=[('1', 'Si'), ('0', 'No')], verbose_name='Sumplemento')),
                ('sup_oral', models.IntegerField(choices=[('1', 'Si'), ('0', 'No')], verbose_name='Suplemento oral')),
                ('sup_intravenoso', models.IntegerField(choices=[('1', 'Si'), ('0', 'No')], verbose_name='Suplemento intravenoso')),
                ('dieta_veces_dia', models.IntegerField(verbose_name='Dieta veces al dia')),
                ('dieta_horarios', models.IntegerField(verbose_name='Dieta horarios')),
                ('calentamiento_previo', models.IntegerField(choices=[('1', 'Si'), ('0', 'No')], verbose_name='Calentamiento previo')),
                ('hora_calentamiento', models.IntegerField(verbose_name='Hora calentamiento')),
                ('minuto_calentamiento', models.IntegerField(verbose_name='Minuto calentamiento')),
                ('trabajo_cantidad_horas', models.IntegerField(verbose_name='Trabajo cantidad de horas')),
                ('trabajo_cantidad_diaria', models.IntegerField(verbose_name='Trabajo cantidad diario')),
                ('trabajo_cantidad_semanal', models.IntegerField(verbose_name='Trabajo cantidad semanal')),
                ('trabajo_potrero', models.IntegerField(choices=[('1', 'Si'), ('0', 'No')], verbose_name='Trabajo potrero')),
                ('trabajo_caminador', models.IntegerField(choices=[('1', 'Si'), ('0', 'No')], verbose_name='Trabajo caminador')),
                ('tiempo_pot_cam_horas', models.IntegerField(verbose_name='Tiempo potrero o caminador horas')),
                ('tiempo_pot_cam_mins', models.IntegerField(verbose_name='Tiempo potrero o caminador minutos')),
                ('puntaje', models.FloatField(verbose_name='Puntaje predecido')),
                ('chip', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='registro.Equino', verbose_name='FK Identificador Equino')),
            ],
            options={
                'verbose_name': 'Variable',
                'verbose_name_plural': 'Variables',
                'db_table': 'variables',
                'ordering': ['-fecha_registro'],
            },
        ),
        migrations.CreateModel(
            name='Historia_Clinica',
            fields=[
                ('id_historia', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='Id Historia clinica')),
                ('fecha_apertura', models.DateField()),
                ('estado', models.CharField(max_length=50, verbose_name='Estado')),
                ('observaciones', models.TextField(verbose_name='Observaciones')),
                ('cedula_vet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Veterinario', verbose_name='FK Identificador veterinario')),
                ('equino_chip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Equino', unique=True)),
            ],
            options={
                'verbose_name': 'Historia_Clinica',
                'verbose_name_plural': 'Historia_Clinicas',
                'db_table': 'historia_clinica',
                'ordering': ['-id_historia'],
            },
        ),
        migrations.CreateModel(
            name='Foto_Equino',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='equino/%Y/%m/%d')),
                ('equino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Equino')),
            ],
            options={
                'verbose_name': 'Foto_Equino',
                'verbose_name_plural': 'Foto_Equinos',
                'db_table': 'foto_equino',
                'ordering': ['-id'],
            },
        ),
        migrations.AddField(
            model_name='equino',
            name='raza',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Raza'),
        ),
        migrations.AddField(
            model_name='equino',
            name='sexo',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Valores_Selects_Vario'),
        ),
        migrations.CreateModel(
            name='Dieta',
            fields=[
                ('id_dieta', models.AutoField(primary_key=True, serialize=False, unique=True, verbose_name='Id chip dieta')),
                ('nombre_dieta', models.CharField(max_length=255, verbose_name='Nombre de la dieta')),
                ('id_fecha', models.DateField(unique=True, verbose_name='Id fecha')),
                ('estado', models.CharField(max_length=255, verbose_name='Estado')),
                ('id_des_conc', models.IntegerField(verbose_name='id_des_conc')),
                ('cant_des_conc', models.FloatField(verbose_name='cant_des_conc')),
                ('id_alm_con', models.IntegerField(verbose_name='id_alm_con')),
                ('cant_alm_conc', models.FloatField(verbose_name='cant_alm_conc')),
                ('id_com_conc', models.IntegerField(verbose_name='id_com_conc')),
                ('cant_com_conc', models.FloatField(verbose_name='cant_com_conc')),
                ('id_des_forraje', models.IntegerField(verbose_name='id_des_forraje')),
                ('cant_des_forraje', models.FloatField(verbose_name='cant_des_forraje')),
                ('id_alm_forraje', models.IntegerField(verbose_name='id_alm_forraje')),
                ('cant_alm_forraje', models.FloatField(verbose_name='cant_alm_forraje')),
                ('id_des_suple', models.IntegerField(verbose_name='id_des_suple')),
                ('cant_des_suple', models.FloatField(verbose_name='cant_des_suple')),
                ('id_alm_suple', models.IntegerField(verbose_name='id_alm_suple')),
                ('cant_alm_suple', models.FloatField(verbose_name='cant_alm_suple')),
                ('id_com_suple', models.IntegerField(verbose_name='id_com_suple')),
                ('cant_com_suple', models.IntegerField(verbose_name='cant_com_suple')),
                ('hora_des_conc', models.TimeField(verbose_name='hora_des_conc')),
                ('hora_des_forraje', models.TimeField(verbose_name='hora_des_forraje')),
                ('hora_des_suple', models.TimeField(verbose_name='hora_des_suple')),
                ('hora_alm_suple', models.TimeField(verbose_name='hora_alm_suple')),
                ('hora_alm_forraje', models.TimeField(verbose_name='hora_alm_forraje')),
                ('hora_alm_conc', models.TimeField(verbose_name='hora_alm_conc')),
                ('hora_com_suple', models.TimeField(verbose_name='hora_com_suple')),
                ('hora_com_forraje', models.TimeField(verbose_name='hora_com_forraje')),
                ('chip_equino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Equino', unique=True)),
                ('comps_nutricionales_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Comps_Nutricional')),
                ('veterinario_cedula', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Veterinario')),
            ],
            options={
                'verbose_name': 'Dieta',
                'verbose_name_plural': 'Dietas',
                'db_table': 'dieta',
                'ordering': ['-id_dieta'],
            },
        ),
        migrations.CreateModel(
            name='Consulta',
            fields=[
                ('id_consulta', models.AutoField(primary_key=True, serialize=False, verbose_name='Id consulta')),
                ('fecha', models.DateField(verbose_name='Fecha')),
                ('frec_cardiaca', models.FloatField(verbose_name='Frecuencia cardiaca')),
                ('frec_respiratoria', models.FloatField(verbose_name='Frecuencia respiratoria')),
                ('pulso', models.CharField(max_length=255, verbose_name='Pulso')),
                ('temperatura', models.FloatField(verbose_name='Temperatura')),
                ('est_hidratacion', models.CharField(max_length=255, verbose_name='Estado hidratación')),
                ('porc_deshidrat', models.FloatField(verbose_name='Porcentaje deshidratación')),
                ('peso', models.FloatField(verbose_name='Peso')),
                ('conjuntival', models.CharField(max_length=255, verbose_name='Conjuntival')),
                ('oral', models.CharField(max_length=255, verbose_name='Oral')),
                ('vulva_prepucio', models.CharField(max_length=255, verbose_name='Vulva o prepucio')),
                ('rectal', models.CharField(max_length=255, verbose_name='Rectal')),
                ('ojos', models.TextField(verbose_name='Ojos')),
                ('oidos', models.TextField(verbose_name='Oidos')),
                ('nod_linfaticos', models.TextField(verbose_name='Nod linfaticos')),
                ('chip_equino', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Equino')),
                ('historia_clinica', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='registro.Historia_Clinica')),
            ],
            options={
                'verbose_name': 'Consulta',
                'verbose_name_plural': 'Consultas',
                'db_table': 'consulta',
                'ordering': ['-id_consulta'],
            },
        ),
    ]
